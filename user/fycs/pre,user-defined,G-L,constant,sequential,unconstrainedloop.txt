declare
a integer:=30;
b integer:=40;
c integer;
f real;
begin
a:=:a;
b:=:b;
c:=a+b;
dbms_output.put_line ('value of c:'||c);
f:=100.0/3.0;
dbms_output.put_line ('value of f:'||f);
end;
////////////////////////////////////////////////////////////////////////////
----global & local variable .

declare
-----global variables
num1 number:=85;
num2 number:=95;
begin
dbms_output.put_line('outer variable num1:'||num1);
dbms_output.put_line('outer variable num2:'||num2);
declare
-----local variable
num1 number:=195;
num2 number:=185;
begin
dbms_output.put_line('lnner variable num1:'||num1);
dbms_output.put_line('lnner variable num2:'||num2);
end;

/////////////////////////////////////////////////////////////////////////////////

----constant
declare
----constant
pi constant number:=3.141592654;
----other declaration
radius number(5,2);
dia number(5,2);
circumference number(7,2);
area number(10,2);
begin
-----processing
radius:=9.5;
dia:=radius*2;
circumference:=2.0*pi*radius;
area:=pi*radius*radius;
----output
dbms_output.put_line('radius:'||radius);
dbms_output.put_line('dia:'||dia);
dbms_output.put_line('circumference:'||circumference);
dbms_output.put_line('Area:'||area);
end;

////////////////////////////////////////////////////////////////////////////////

--------------Sequential Statements


DECLARE
----Declaration section
v_number1 NUMBER := 10;      ----Variable declaration
v_number2 NUMBER := 20;      ----Variable to hold the sum
v_sum NUMBER;
BEGIN
---Assignment section
v_sum := v_number1 + v_number2; -------assignment statement
---Execution section
---Output result
DBMS_OUTPUT.PUT_LINE('Number 1:'|| v_number1);
DBMS_OUTPUT.PUT_LINE('Number 2:'|| v_number2); 
DBMS_OUTPUT.PUT_LINE('Sum: ' || v_sum);
---Conditional statement
IF v_sum > 15 THEN
DBMS_OUTPUT.PUT_LINE('The sum is greater than 15.');
ELSE
DBMS_OUTPUT.PUT_LINE('The sum is 15 or less.');
END IF;
END;

///////////////////////////////////////////////////////////////////////////////
 --------unconstrained loop

BEGIN
----Initialize a counter variable
DECLARE
counter NUMBER := 1;
BEGIN
---Unconstrained loop
LOOP
----Print the current number and its square
dbms_output.put_line('Number:'||counter ||', square:'||(counter*counter));
----Exit the loop after 10 iterations
EXIT WHEN counter >= 10;
---Increment the counter
counter:=counter + 1;
END LOOP;
END;
END;
