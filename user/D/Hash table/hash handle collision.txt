class Node:
    def __init__(self, key, value):
        self.key = key
        self.value = value
        self.next = None

class HashTable:
    def __init__(self, size=10):
        self.size = size
        self.table = [None] * self.size

    def _hash(self, key):
        return hash(key) % self.size

    def insert(self, key, value):
        index = self._hash(key)
        new_node = Node(key, value)
        if self.table[index] is None:
            self.table[index] = new_node
        else:
            current = self.table[index]
            while current:
                if current.key == key:
                    current.value = value
                    return
                if current.next is None:
                    current.next = new_node
                    return
                current = current.next

    def get(self, key):
        index = self._hash(key)
        current = self.table[index]
        while current:
            if current.key == key:
                return current.value
            current = current.next
        return None

    def delete(self, key):
        index = self._hash(key)
        current = self.table[index]
        prev = None
        while current:
            if current.key == key:
                if prev:
                    prev.next = current.next
                else:
                    self.table[index] = current.next
                return True
            prev = current
            current = current.next
        return False

    def display(self):
        for i in range(self.size):
            current = self.table[i]
            if current:
                print(f"Index {i}: ", end="")
                while current:
                    print(f"({current.key}: {current.value}) -> ", end="")
                    current = current.next
                print("None")
            else:
                print(f"Index {i}: None")

# Example Usage
ht = HashTable()

# Insertion
ht.insert("key1", "value1")
ht.insert("key2", "value2")
ht.insert("key3", "value3")
ht.insert("key1", "updated_value1")  # Update existing key
ht.insert("key4", "value4")

# Display the hash table
ht.display()

# Get values
print("\nGet key1:", ht.get("key1"))
print("Get key2:", ht.get("key2"))
print("Get key5:", ht.get("key5"))  # Non-existent key

# Deletion
ht.delete("key2")
print("\nAfter deleting key2:")
ht.display()
