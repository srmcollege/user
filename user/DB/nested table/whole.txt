-- 1. Creating a Nested Table

CREATE OR REPLACE TYPE employee_type AS OBJECT (
    emp_id NUMBER,
    emp_name VARCHAR2(50),
    emp_salary NUMBER
);

CREATE OR REPLACE TYPE employee_table_type AS TABLE OF employee_type;

-- 2. Working with a Nested Table

DECLARE
    emp_table employee_table_type := employee_table_type();
    emp_rec employee_type; 
BEGIN
    emp_table.EXTEND;
    emp_table(1) := employee_type(1, 'Aarav', 50000);

    emp_table.EXTEND;
    emp_table(2) := employee_type(2, 'Vivaan', 60000);

    emp_table.EXTEND;
    emp_table(3) := employee_type(3, 'Sanchit Rawool', 55000);

    emp_table.EXTEND;
    emp_table(4) := employee_type(4, 'Anaya', 65000);

    emp_table.EXTEND;
    emp_table(5) := employee_type(5, 'Diya', 70000);

    FOR i IN 1 .. emp_table.COUNT LOOP
        emp_rec := emp_table(i);
        DBMS_OUTPUT.PUT_LINE('Employee ID: ' || emp_rec.emp_id || ', Name: ' || emp_rec.emp_name || ', Salary: ' || emp_rec.emp_salary);
    END LOOP;
END;
/

-- 3. Creating and Working with an Index-By Table

DECLARE
    TYPE emp_index_by_type IS TABLE OF VARCHAR2(50) INDEX BY PLS_INTEGER;
    emp_names emp_index_by_type;
BEGIN
    emp_names(1) := 'Aarav';
    emp_names(2) := 'Vivaan';
    emp_names(3) := 'Sanchit Rawool';
    emp_names(4) := 'Anaya';
    emp_names(5) := 'Diya';

    FOR i IN 1 .. 5 LOOP
        DBMS_OUTPUT.PUT_LINE('Employee Name: ' || emp_names(i));
    END LOOP;
END;
/

-- 4. Creating and Working with Row Types

CREATE TABLE employees (
    emp_id NUMBER PRIMARY KEY,
    emp_name VARCHAR2(50),
    emp_salary NUMBER
);

INSERT INTO employees (emp_id, emp_name, emp_salary) VALUES (1, 'Aarav', 50000);
INSERT INTO employees (emp_id, emp_name, emp_salary) VALUES (2, 'Vivaan', 60000);
INSERT INTO employees (emp_id, emp_name, emp_salary) VALUES (3, 'Sanchit Rawool', 55000);
INSERT INTO employees (emp_id, emp_name, emp_salary) VALUES (4, 'Anaya', 65000);
INSERT INTO employees (emp_id, emp_name, emp_salary) VALUES (5, 'Diya', 70000);
COMMIT;

DECLARE
    emp_rec employees%ROWTYPE;  
BEGIN
    SELECT * INTO emp_rec FROM employees WHERE emp_id = 3;

    DBMS_OUTPUT.PUT_LINE('Employee ID: ' || emp_rec.emp_id || ', Name: ' || emp_rec.emp_name || ', Salary: ' || emp_rec.emp_salary);
END;
/
